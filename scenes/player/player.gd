extends CharacterBody2D

const SPEED := 200
const JUMP_VELOCITY := -400
const GRAVITY := 900

# üî• –ü–ª–∞–º—è
var flame := 100.0  # –æ—Ç 100 –¥–æ 0
var hud

@onready var flame_light: Light2D = $FlameLight
@onready var death_screen = get_parent().get_node("DeathScreen")

func _ready():
	# –ù–∞–π–¥—ë–º HUD ‚Äî –ø—É—Ç—å –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–≤–æ–µ–π —Å—Ü–µ–Ω—ã!
	# –ï—Å–ª–∏ HUD –≤ –∫–æ—Ä–Ω–µ —É—Ä–æ–≤–Ω—è:
	hud = get_parent().get_node("HUD")

func _physics_process(delta):
	# –ì—Ä–∞–≤–∏—Ç–∞—Ü–∏—è
	if not is_on_floor():
		velocity.y += GRAVITY * delta

	# –î–≤–∏–∂–µ–Ω–∏–µ –≤–ª–µ–≤–æ/–≤–ø—Ä–∞–≤–æ
	var direction = Input.get_action_strength("ui_right") - Input.get_action_strength("ui_left")
	velocity.x = direction * SPEED

	# –ü—Ä—ã–∂–æ–∫
	if is_on_floor() and Input.is_action_just_pressed("ui_accept"):
		velocity.y = JUMP_VELOCITY

	move_and_slide()

	# üîª –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–µ —É–≥–∞—Å–∞–Ω–∏–µ
	flame -= delta * 5
	flame = clamp(flame, 0, 100)

	update_light()

	# üíÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–º–µ—Ä—Ç—å
	if flame <= 0.0:
		die()

	# üîª –û–±–Ω–æ–≤–ª—è–µ–º HUD
	if hud:
		hud.update_flame(flame)

func update_light():
	# –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º —è—Ä–∫–æ—Å—Ç—å —Å–≤–µ—Ç–∞ –æ—Ç –ø–ª–∞–º–µ–Ω–∏ (–¥–µ–ª–∏–º –Ω–∞ 100, –µ—Å–ª–∏ energy –æ—Ç 0 –¥–æ 1)
	flame_light.energy = flame / 100.0

func _unhandled_input(event):
	if event.is_action_pressed("ui_cancel"):
		get_tree().change_scene_to_file("res://scenes/ui/main_menu.tscn")

func die():
	print("üî• –ì–µ—Ä–æ–π —É–≥–∞—Å...")
	death_screen.visible = true  # –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω —Å–º–µ—Ä—Ç–∏
	queue_free()  # —É–Ω–∏—á—Ç–æ–∂–∞–µ–º –∏–≥—Ä–æ–∫–∞

	# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞–¥–ø–∏—Å—å, –µ—Å–ª–∏ Label –µ—Å—Ç—å
	var label_path = "TestLevel/CanvasLayer/Label"
	if get_tree().get_root().has_node(label_path):
		var label = get_tree().get_root().get_node(label_path)
		label.text = "üî• –ì–µ—Ä–æ–π —É–≥–∞—Å..."
		label.visible = true

	# –£–¥–∞–ª—è–µ–º –∏–≥—Ä–æ–∫–∞
	queue_free()
